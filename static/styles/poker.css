* {
  box-sizing            : border-box;
}

:root {
  font-family           : sans-serif;
  --navigation-height   : calc(var(--navigation-line-height, 1.1) * 1rem);
}

body {
  margin: 0;
}

.layout {
  border: none !important;
  min-height: 100vh;
  overflow: hidden;
}

/* common to all game layouts */
.game {
  display       : grid;
  text-align    : center;
  background    : green;
  color         : white;
  --game-height : calc(100vh - var(--navigation-height));
  --game-width  : 100vw;
  min-height    : var(--game-height);
  max-height    : var(--game-height);
  overflow      : hidden;
  position      : relative;
}

.game>* {
  justify-self: center;
  align-self  : center;
}

/* status elements */
.money {
  grid-area: money;
  justify-self: start;
  margin-left : 2vw;
}
.jokerRounds {
  grid-area: joker;
  justify-self: end;
  margin-right: 2vw;
}
.title {
  grid-area: title;
  font-size: 2em;
}

.money, .jokerRounds {
  font-size   : 2em;
}

#test::before{
  display: block;
  content: var(--layout);
  padding: 20%;
}
#test {
  grid-area       : wins;
  background-color: lightgray; 
  color           : blue;
  --card-width    : calc(0.16 * var(--game-width));
  --card-height   : calc(1.4 * var(--card-width));  
  width           : var(--card-width);
  height          : var(--card-height);
  z-index         : 100;
}

/* win table */

.winTable {
  grid-area: wins;
  display   : table;
  font-size : calc(0.02 * var(--game-height))
}

.winTableRow {
  display: table-row;
}

.winTableRow:nth-child(even)>.winTableCell {
  background-color: var(--odd-row-color);
}

.winTableRow>.winTableCell.winLabel {
  border-bottom-left-radius : var(--radius);
  border-top-left-radius    : var(--radius);
}

.winTableRow:nth-child(even)>.winTableCell:last-child:not(.currentBet) {
  border-bottom-right-radius: var(--radius);
  border-top-right-radius   : var(--radius);
}

.winTableCell {
  --odd-row-color  : #090;
  --radius         : 1vh;
  display          : table-cell;
  text-align       : right;
  padding-top      : 0.2em;
  padding-bottom   : 0.2em;
  padding-left     : 0.5em;
  padding-right    : 0.5em;
}

.currentBet {
  --border-color: #0E0;
}

.winTableCell.currentBet {
  border-left               : 0.5vmax solid var(--border-color);
  border-right              : 0.5vmax solid var(--border-color);
}
.winTableRow:first-child>.winTableCell.currentBet {
  border-top                : 0.5vmax solid var(--border-color);
  border-top-left-radius    : var(--radius);
  border-top-right-radius   : var(--radius);
}

.winTableRow:last-child>.winTableCell.currentBet {
  border-bottom             : 0.5vmax solid var(--border-color);
  border-bottom-left-radius : var(--radius);
  border-bottom-right-radius: var(--radius);
}

.winTableCell:first-child {
  text-align                : left;
  padding-left              : 0.3em;
}

.winTableCell:last-child {
  padding-right: 0.3em;
}

/* show last win if any */
.lastWin>.winTableCell.winLabel,
.lastWin>.winTableCell.currentBet{
  font-weight : bold;
  box-shadow  : inset 0 0 3vmin white;
}

.control {
  z-index: 100;
}

.control {
 --control-height: 7vh;
}

.control {
  height            : var(--control-height);
  width             : calc(2 * var(--control-height));
  max-width         : 18vw;
  background-color  : lightgray;
  color             : gray;
  font-weight       : bold;
  position          : relative;
  grid-area         : control;
  border            : 1px solid gray;
  border-radius     : 60%;
  display           : flex;
  flex-direction    : column;
  justify-content   : space-around;
}

.control.active {
  background: radial-gradient(yellow, lightgray);
  color     : black;
}

.control.bet {
  left: -40%;
}

.control.deal {
  left: 40%;
}

.control.right {
  left: 20%;
}
/* card position variables common to all layouts */

.card {
  --deck-vertical-offset  : -100%;
  --deck-horizontal-offset: -30%;
   /* use deck positioning as default position to simplify transitions */
  grid-area               : table;
  --card-vertical-offset  : var(--deck-vertical-offset);
  --card-horizontal-offset: var(--deck-horizontal-offset);
}


.card {
  --card-width              : calc(0.16 * var(--game-width));
  --card-height             : calc(1.4 * var(--card-width));  
  --hiding-offset           : 0.04vh;
  border                    : 0.1px solid lightgray;
  font-size                 : calc(var(--card-height) * 0.2);
  width                     : var(--card-width);
  height                    : var(--card-height);
  border-radius             : calc(0.04 * var(--card-height));
  background                : white;
  display                   : flex;
  flex-direction            : column;
  justify-content           : space-around;
  position                  : relative;
  z-index                   : calc(60 - var(--card-order, 0));
}

.card.red {
  color: red;
}

.card.black {
  color: black;
}

.card.joker {
  color: blue;
}
/*
Default position for cards now
.deck {
  grid-area: table;
  --card-vertical-offset  : -100%;
  --card-horizontal-offset: -30%;
}
*/
/*
Now all cards on the table
.hand,
.left,
.right {
  grid-area: table;
}
*/

/* spread out cards on the table */
.card.hand,
.card.left,
.card.right {
  --card-horizontal-offset: calc(20% * (var(--card-order) - 2));
  left                    : var(--card-horizontal-offset);
  top                     : 0%;
}

.card.left {
  --card-horizontal-offset: 0%;
}

.card.right {
  --card-horizontal-offset: 20%;
}

/* card placeholders on the table */
.card.placeHolder {
  background-color  : transparent;
  z-index           : 1;
  border            : calc(0.03*var(--card-width)) solid #6F6;
}

/* looser card stacks on the table */
.card.left.hidden,
.card.right.hidden {
  --hiding-offset       : 1vh;
  --card-vertical-offset: 0%;
}

.card.hidden {
  border    : 0.7vh solid white;
  /* background: radial-gradient(#88F, #66A); */
  background: content-box url('/static/img/card-background.png') center/contain;
  top       : calc(var(--card-vertical-offset, 0%) + var(--hiding-offset) * var(--card-order, 0));
  left      : calc(var(--card-horizontal-offset, 0%) + (var(--hiding-offset) * var(--card-order, 0)));
}

/* joker initially hidden position */
.card.joker.initiallyHidden {
  position: relative;
  top     : -100%;
  left    : -10%;
  z-index : -1;
}

/* Default layout 
@media (min-aspect-ratio: 1/2) and (max-aspect-ratio: 1/1)
*/
.game {
  --layout              : 'portrait';
  grid-template-columns : 3fr 3fr 8fr 3fr 3fr;
  grid-template-rows    : 3fr 10fr 10fr 3fr;
  grid-template-areas   : 
    "money   title   title  title    joker"
    "deck    deck    wins    wins    wins"
    "table   table   table   table   table"
    "control control control control control"
  ;
}

/* really tall phones etc. */
@media (max-aspect-ratio: 1/2) {
  .game {
    --layout              : 'supertall';
    grid-template-columns : 3fr 3fr 8fr 3fr 3fr;
    grid-template-rows    : 3fr 10fr 6fr 6fr 3fr;
    grid-template-areas   : 
      "money   title   title  title    joker"
      "wins    wins    wins    wins    wins"
      "deck    deck    .       .       ."
      "table   table   table   table   table"
      "control control control control control"
    ;
  }
  #test {
    grid-area: deck;
    position: relative;
  }
}

@media (min-aspect-ratio: 1 / 1) {
  .game {
    --layout              : 'landscape';
    grid-template-columns : 2fr 4fr 4fr 4fr 3fr 3fr;
    grid-template-rows    : 2fr 4fr 4fr 8fr 2fr;
    grid-template-areas   :
      "money   title   title   title   title   joker"
      "deck    deck    .       wins    wins    wins"
      "deck    deck    .       wins    wins    wins"
      "table   table   table   table   table   table"
      "control control control control control control"
    ;
  }
}

@media (min-aspect-ratio: 3/2) {
  .card {
    --card-height-fraction : 0.34;
    --card-height           : calc(var(--card-height-fraction) * var(--game-height));
    --card-width            : calc(var(--card-height) / 1.4);
  }
}